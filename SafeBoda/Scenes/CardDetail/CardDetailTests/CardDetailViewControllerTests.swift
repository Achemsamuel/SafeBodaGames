//
//  CardDetailViewControllerTests.swift
//  SafeBoda
//
//  Created by Achem Samuel on 6/24/20.
//  Copyright (c) 2020 Achem Samuel. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import SafeBoda
import XCTest

class CardDetailViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: CardDetailViewController!
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
    setupCardDetailViewController()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupCardDetailViewController()
  {
    let bundle = Bundle.main
    let storyboard = UIStoryboard(name: "Main", bundle: bundle)
    sut = storyboard.instantiateViewController(withIdentifier: "CardDetailViewController") as! CardDetailViewController
  }
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class CardDetailBusinessLogicSpy: CardDetailBusinessLogic
  {
    var fetchDataOnLoadWasCalled = false
    func fetchDataOnLoad() {
        fetchDataOnLoadWasCalled = true
    }
  
  }
  
  // MARK: Tests
  
  func testThatFetchDataOnLoadIsCalledWhenViewIsLoaded()
  {
    let spy = CardDetailBusinessLogicSpy()
    sut.interactor = spy
    loadView()
    XCTAssertTrue(spy.fetchDataOnLoadWasCalled, "viewDidLoad() should ask the interactor to fetchDataOnLoad")
  }
  
  func testDisplayFetchedData()
  {
    var viewModel = CardDetail.FetchDataOnLoad.ViewModel()
    viewModel.cardVM = CardListViewModel(id: "", name: "test", image: ImageUrisViewModel(), setName: "", cardType: "", rarity: "", releaseDate: "", manaCost: "", cmc: 0, oracleText: "", legalities: LegalitiesViewModel())
    loadView()
    sut.displayDataOnLoad(viewModel: viewModel)
    XCTAssertEqual(sut.cardName.text, "test", "displaySomething(viewModel:) should update the cardname text field")
  }
}
